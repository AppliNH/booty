on:
  push:
    tags:
    - '*'

name: Upload Release Asset


jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-16.04
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  create_release_assets:
    name:  Create Release Assets
   
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.15.6]
        target: ["all"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go 
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Setup Go binary path
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Git line endings
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out THIS code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}

      - name: make ${{ matrix.target }}
        shell: bash
        run: |
          # workaround for https://github.com/actions/setup-go/issues/14
          #export GOPATH=${GITHUB_WORKSPACE}/go
          #export PATH=$PATH:$GOPATH/bin
          make $target
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
        env:
          target: ${{ matrix.target }}

      # ${{ github.workspace }}/go/src/github.com/${{ github.repository }}/example/dist/        
      
      - name: Share artifacts
        uses: actions/upload-artifact@master
        with:
          name: booty-${{ matrix.os }}
          path: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}/example/dist/

  upload_release_assets:
    name: Upload Release Assets
    needs: create_release_assets
    runs-on: ubuntu-latest
    steps:
      - name: Get Ubuntu artifacts
        uses: actions/download-artifact@master
        with:
          name: booty-ubuntu-latest
          path: ~/booty/booty-ubuntu-latest
      
      - name: Get Windows artifacts
        uses: actions/download-artifact@master
        with:
          name: booty-windows-latest
          path: ~/booty/booty-windows-latest
      
      - name: Get MacOS artifacts
        uses: actions/download-artifact@master
        with:
          name: booty-macos-latest
          path: ~/booty/booty-macos-latest
      - name: Show artifacts
        shell: bash
        run: |
          ls ~/booty/booty-ubuntu-latest
          ls ~/booty/booty-macos-latest
          ls ~/booty/booty-windows-latest
      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          # GHR_COMPRESS: xz
          GHR_PATH: ~/booty/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
