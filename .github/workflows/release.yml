on:
  push:
    tags:
    - '*'

name: Upload Release Asset


jobs:
  all:
    name:  Upload Release Asset
   
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.15.6]
        target: ["all"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go 
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Setup Go binary path
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Git line endings
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Check out THIS code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}

      - name: make ${{ matrix.target }}
        shell: bash
        run: |
          # workaround for https://github.com/actions/setup-go/issues/14
          #export GOPATH=${GITHUB_WORKSPACE}/go
          #export PATH=$PATH:$GOPATH/bin
          make $target
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}
        env:
          target: ${{ matrix.target }}

      # ${{ github.workspace }}/go/src/github.com/${{ github.repository }}/example/dist/        
    
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_COMPRESS: xz
          GHR_PATH: ${{ github.workspace }}/go/src/github.com/${{ github.repository }}/example/dist/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      


      # - name: Upload assets
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # name: booty
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: booty_${{github.ref}}-SNAPSHOT-${{ github.sha }}_Linux_x86_64.tar.gz
      #     asset_name: booty_${{github.ref}}-SNAPSHOT-{{ $GITHUB_SHA }}_Linux_x86_64.tar.gz
      #     asset_content_type: application/tar.gz